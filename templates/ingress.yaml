{{- $fullName := include "application.fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: {{ .Values.ingress.letsencryptIssuer }}
    nginx.org/client-max-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-body-size: 16m
    nginx.org/proxy-connect-timeout: 600s
    nginx.org/proxy-read-timeout: 600s
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.ingress.letsencrypt }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: 80

---
{{- if or (eq .Values.global.env "dev") (eq .Values.global.env "stg") (eq .Values.global.env "prod") }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}-whitelist
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/whitelist-source-range: 213.194.97.34
spec:
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /swagger
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: 80
{{- end }}